name: tests

on:
  push:
    branches: [main]
  pull_request:
  schedule:
    # Run every Sunday
    - cron: "0 0 * * 0"
  workflow_dispatch:

jobs:
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry update
          poetry install

      - name: Lint package
        run: |
          poetry run make lint

  tests:
    name: Tests (${{ matrix.os }}, Python ${{ matrix.python-version }})
    needs: code-quality
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
    defaults:
      run:
        shell: bash

    steps:
      - name: Disable git auto-CRLF for Windows
        run: git config --global core.autocrlf false
        if: ${{ matrix.os == 'windows-latest'}}

      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry update
          poetry install

      - name: Test package
        run: |
          poetry run make test

      - name: Test docs
        run: |
          poetry run make docs

      - name: Test building package
        run: |
          poetry run make build
          if [[ ${{ matrix.os }} == "windows-latest" ]]; then
            PYTHON_BIN=Scripts/python
          else
            PYTHON_BIN=bin/python
          fi
          # Test wheel install
          python -m venv wheel-env
          wheel-env/$PYTHON_BIN -m pip install dist/quickhttp-*.whl
          wheel-env/$PYTHON_BIN -m quickhttp --version
          # Test source install
          python -m venv source-env
          source-env/$PYTHON_BIN -m pip install dist/quickhttp-*.tar.gz
          source-env/$PYTHON_BIN -m quickhttp --version

      - name: Upload coverage to codecov
        if: ${{ matrix.os == 'ubuntu-latest'}}
        uses: codecov/codecov-action@v1.0.10
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  notify:
    name: Notify failed build
    needs: [code-quality, tests]
    if: failure() && github.event.pull_request == null
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WORKFLOW_NAME: ${{ github.workflow }}
          RUN_NUMBER: ${{ github.run_number}}
          REPOSITORY: ${{ github.repository }}
          RUN_ID: ${{ github.run_id }}
        with:
          filename: .github/failed_build_issue_template.md
